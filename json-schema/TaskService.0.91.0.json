{
    "$schema": "http://www.redfishspecification.org/schema",
    "title": "TaskService.0.91.0",
    "type": "object",
    "additionalProperties": false,
    "description": "This is the schema definition for the Task Service.  It represents the properties for the service itself and has links to the actual list of tasks.",
    "specification": "This resource shall be used to represent a task service for a Redfish implementation.",
    "properties": {
        "Oem": {
            "$ref": "Oem.0.91.0.json#"
        },
        "Name": {
            "$ref": "Name.0.91.0.json#"
        },
        "Modified": {
            "$ref": "Modified.0.91.0.json#"
        },
        "Type": {
            "$ref": "Type.0.91.0.json#"
        },
        "Description": {
            "$ref": "Description.0.91.0.json#"
        },
        "MaxNumberOfTasks": {
            "type": "integer",
            "minimum": 0,
            "description": "The maximum number of tasks this service can track.",
            "readonly": true,
            "specification": "The value of this property shall indicate the maximum number of tasks that this service can support."
        },
        "CompletedTaskOverWritePolicy": {
            "type": "string",
            "description": "Overwrite policy of completed tasks",
            "enum": [
                "Manual",
                "Oldest"
            ],
            "enumDescriptions": {
                "Manual": "Completed tasks are not automatically overwritten",
                "Oldest": "Oldest completed tasks are overwritten"
            },
            "readonly": true,
            "specification": "The value of this property shall indicate if completed tasks are overwritten should the task service need to track more tasks but the MaxNumberOfTasks has been reached.  Never indicates that the service never overwrites entries by new entries thus causing attempts to spawn tasks to fail.  Oldest indicates that the services overwrites the oldest completed task with a new task when the service has reached its maximum capacity."
        },
        "LifeCycleEventOnTaskStateChange": {
            "type": "boolean",
            "description": "Send an Event upon Task State Change.",
            "readonly": true,
            "specification": "The value of this property, if set to true, shall indicate that the service shall send a LifeCycle event to ListenerDestinations registered for such events upon change of task state."
        },
        "Status": {
            "$ref": "Status.0.91.0.json#"
        },
        "links": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "href.0.91.0.json#"
                    },
                    "description": "References to the Tasks collection.",
                    "specification": "The value of this property shall reference a resource of type Collection with a MemberType of Task.",
                    "readonly": true
                },
                "self": {
                    "$ref": "href.0.91.0.json#",
                    "description": "This is the URI of this resource.",
                    "specification": "The value of this property shall reference the URI of this resource."
                }
            },
            "description": "The object contains references to other resources."
        }
    },
    "required": [
        "Type"
    ],
    "copyright": "Copyright 2013-2014 Avocent Corporation. Copyright 2014 Dell Inc. Copyright 2013-2014 Hewlett-Packard Development Company, L.P. Copyright 2014 Intel Corporation."
}